(desc:(eng:"# N-monoportal\n\nThis monoportal (portal with one continuous surface) acts as it consists of N parts, e.g. of three parts (look at `Triple portal` scene), but every time there is only one part!\n\n# Regular monoportal\n\nThis is derived with `Count = 2`, and this is pretty obvious, it looks like it has two parts. If you replace portals with mirrors (`Act as a mirror` option), then it looks like a regular mirror.\n\n# Triple monoportal\n\nThis sounds wild, but this looks like a baby from Monoportal and Triple portal. Image through this portal is continuous, and this is important. But, for the mirror continuous of the image brokes.\n\n# Quadruple monoportal\n\nHere mirror is not broken. Actually, the mirror is broken only for odd N.\n\nFor mirror enabled, a quarter in the middle looks like a regular monoportal, and this is! This is how a «True mirror» is created: just two mirrors around each other with the 90° angle between.\n\n# Other\n\nOther monoportals look boring.",rus:"# N-монопортал\n\nЭто монопортал (портал с одной непрерывной телепортирующей поверхностью), который ведёт себя как будто он состоит из N частей, например из трёх (смотри тройной портал), но на самом деле часть всегда одна!\n\n# Обычный монопортал\n\nОн получается при `Count = 2`, и это довольно очевидно, он выглядит как будто у него есть две части. Если заменить порталы на зеркала (опция `Act as a mirror`), то он выглядит как обычное зеркало.\n\n# Тройной монопортал\n\nЭто звучит дико, но это похоже на ребёнка монопортала и тройной портала. Самое главное что в нём изображение сохраняет непрерывность и выглядит хорошо. В отличие от зеркала, оно ломается посередине.\n\n# Четверной монопортал\n\nА тут уже зеркало не ломается. На саммо деле зеркало ломается только для нечётных N.\n\nЧетвертинка посередине выглядит как обычный монопортал — через неё можно читать текст напротив вас, и это сохраняется даже если включить зеркало! Именно так и сделан предмет под названием «True mirror», он состоит из двух зеркал, стоящих друг напротив друга под 90°.\n\n# Остальные\n\nОстальные монопорталы ничем не выделяются."),cam:(look_at:(0,0,0),alpha:-1.0809671725940722,beta:1.156049127370121,r:3.8500000000000165,offset_after_material:0.000030000000000000004),uniforms:(ids:(available:[],max:14),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Int((min:Some(2),max:Some(7),value:3)),"count"),(7):Named(Float((min:None,max:None,value:1)),"portal_ellipse_a"),(8):Named(Float((min:None,max:None,value:1)),"portal_ellipse_b"),(9):Named(Bool(true),"portal_teleport_light"),(10):Named(Float((min:None,max:None,value:0.13)),"portal_border_size"),(11):Named(Bool(false),"portal_mirror"),(12):Inline(Formula(("pi() - (pi() - 2*pi()/count)/2"))),(13):Inline(Formula(("(pi() - 2*pi()/count)/2")))},storage_order:[(0),(1),(2),(7),(8),(9),(11),(10),(6)]),matrices:(ids:(available:[],max:15),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((12)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(14):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((13)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)))},storage_order:[(0)]),objects:(ids:(available:[],max:7),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_texture_M);"))),"room_z-"),(6):Named(Flat(kind:Portal(Some(((13))),Some(((14)))),is_inside:(("int back_material = solid_black_M;\n\nint teleport_material = TELEPORT;\nif (portal_teleport_light_u == 0) { teleport_material = grid_gray_M; }\nif (back) { teleport_material = back_material; }\nif (portal_mirror_u == 1) { teleport_material = mirror_M; }\n\nfloat radius = 2.0;\nfloat radius_sqr = sqr(radius);\nfloat radius_border_sqr = sqr(radius + portal_border_size_u);\nfloat pos1 = sqr(x*portal_ellipse_a_u) + sqr(y*portal_ellipse_b_u);\n\nif (pos1 < radius_border_sqr && x > 0.) {\n  if (pos1 > radius_sqr) {\n    return back_material;\n  } else {\n    return teleport_material;\n  }\n} else {\n  return NOT_INSIDE;\n}"))),"monoportal")},storage_order:[(0),(1),(2),(3),(4),(5),(6)]),cameras:(ids:(available:[],max:0),storage:{},storage_order:[]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"monoportal")},storage_order:[(0)]),materials:(ids:(available:[],max:12),storage:{(0):Named(Simple(color:(0.7647179,0.7024815,0.061205085),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.029196177,0.029196177,0.029196177),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8458183,0.07454156,0.07454156),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.18068509,0.18068509,0.18068509),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.116810285,0.26798066,0.9083436),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15478948,0.73873776,0.2186588),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(10):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(11):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture2D(monoportal_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture")},storage_order:[(0),(2),(1),(3),(4),(5),(6),(7),(8),(9),(10),(11)]),library:(ids:(available:[],max:1),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room")},storage_order:[(0)]),animations_filters:(uniforms:({((10)):false,((2)):false,((0)):false,((9)):true,((11)):true,((7)):false,((6)):true,((1)):false,((8)):false}),matrices:({((0)):false}),cameras:({})),elements_descriptions:(uniforms:({((10)):(help_description:None,overrided_name:""),((9)):(help_description:None,overrided_name:"Teleport light"),((11)):(help_description:None,overrided_name:"Act as mirror"),((7)):(help_description:None,overrided_name:"Ellipse A"),((6)):(help_description:None,overrided_name:"Count"),((8)):(help_description:None,overrided_name:"Ellipse B")}),matrices:({}),cameras:({})),user_uniforms:(uniforms:({((11)):true,((7)):false,((6)):true,((9)):true,((8)):false}),matrices:({})),animation_stages:(ids:(available:[],max:0),storage:{},storage_order:[]),current_stage:None,dev_stage:(uniforms:({((11)):Bool(false),((1)):Float((min:Some(0),max:None,value:4)),((8)):Float((min:None,max:None,value:1)),((2)):Float((min:Some(0),max:None,value:4)),((6)):Int((min:Some(2),max:Some(7),value:3)),((0)):Float((min:Some(0),max:None,value:4)),((7)):Float((min:None,max:None,value:1)),((9)):Bool(true),((10)):Float((min:None,max:None,value:0.13))}),matrices:({((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))})))