{"description_en":"","description_ru":"","cam":{"look_at":[0.0,0.0,0.0],"alpha":-6.871306,"beta":0.9146289,"r":2.8925416,"offset_after_material":0.000025},"uniforms":{"names":["room_size_x","room_size_x_minus","room_size_y","room_size_y_minus","room_size_z","room_size_z_minus","border","h","w","back_enabled","black_border"],"storage":[{"Float":{"min":0.0,"max":null,"value":4.0}},{"Formula":"-room_size_x"},{"Float":{"min":0.0,"max":null,"value":4.0}},{"Formula":"-room_size_y"},{"Float":{"min":0.0,"max":null,"value":4.0}},{"Formula":"-room_size_z"},{"Float":{"min":0.0,"max":null,"value":0.15}},{"Float":{"min":0.0,"max":null,"value":1.5}},{"Float":{"min":0.0,"max":null,"value":1.0}},{"Bool":true},{"Float":{"min":0.0,"max":null,"value":0.02}}]},"matrices":{"names":["id","room_origin","rx1","rx2","ry1","ry2","rz1","rz2","mrx1","mrx2","mry1","mry2","mrz1","mrz2","a","b","c","x","ax","bx","cx"],"storage":[{"Simple":{"offset":[0.0,0.0,0.0],"scale":1.0,"rotate":[0.0,0.0,0.0],"mirror":[false,false,false]}},{"Simple":{"offset":[0.0,0.0,0.0],"scale":1.0,"rotate":[0.0,0.0,0.0],"mirror":[false,false,false]}},{"Parametrized":{"offset":{"x":{"Yes":"room_size_x"},"y":{"No":0.0},"z":{"No":0.0}},"rotate":{"x":{"No":0.0},"y":{"No":1.5707964},"z":{"No":0.0}},"mirror":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"scale":{"No":1.0}}},{"Parametrized":{"offset":{"x":{"Yes":"room_size_x_minus"},"y":{"No":0.0},"z":{"No":0.0}},"rotate":{"x":{"No":0.0},"y":{"No":1.5707964},"z":{"No":0.0}},"mirror":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"scale":{"No":1.0}}},{"Parametrized":{"offset":{"x":{"No":0.0},"y":{"Yes":"room_size_y"},"z":{"No":0.0}},"rotate":{"x":{"No":1.5707964},"y":{"No":0.0},"z":{"No":0.0}},"mirror":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"scale":{"No":1.0}}},{"Parametrized":{"offset":{"x":{"No":0.0},"y":{"Yes":"room_size_y_minus"},"z":{"No":0.0}},"rotate":{"x":{"No":1.5707964},"y":{"No":0.0},"z":{"No":0.0}},"mirror":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"scale":{"No":1.0}}},{"Parametrized":{"offset":{"x":{"No":0.0},"y":{"No":0.0},"z":{"Yes":"room_size_z"}},"rotate":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"mirror":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"scale":{"No":1.0}}},{"Parametrized":{"offset":{"x":{"No":0.0},"y":{"No":0.0},"z":{"Yes":"room_size_z_minus"}},"rotate":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"mirror":{"x":{"No":0.0},"y":{"No":0.0},"z":{"No":0.0}},"scale":{"No":1.0}}},{"Mul":{"to":"rx1","what":"room_origin"}},{"Mul":{"to":"rx2","what":"room_origin"}},{"Mul":{"to":"ry1","what":"room_origin"}},{"Mul":{"to":"ry2","what":"room_origin"}},{"Mul":{"to":"rz1","what":"room_origin"}},{"Mul":{"to":"rz2","what":"room_origin"}},{"Simple":{"offset":[0.0,0.0,0.0],"scale":1.0,"rotate":[0.0,0.0,0.0],"mirror":[false,false,false]}},{"Simple":{"offset":[0.0,0.0,0.0],"scale":1.0,"rotate":[1.5707964,0.0,4.712389],"mirror":[false,false,false]}},{"Simple":{"offset":[0.0,0.0,0.0],"scale":1.0,"rotate":[0.0,4.712389,1.5707964],"mirror":[false,false,false]}},{"Simple":{"offset":[0.0,0.0,0.0],"scale":1.0,"rotate":[0.0,0.0,0.0],"mirror":[false,false,false]}},{"Mul":{"to":"a","what":"x"}},{"Mul":{"to":"b","what":"x"}},{"Mul":{"to":"c","what":"x"}}]},"objects":{"names":["rx1","rx2","ry1","ry2","rz1","rz2","ax_big","bx_big","cx_big","ax_small","bx_small","cx_small"],"storage":[{"Flat":{"kind":{"Simple":"mrx1"},"is_inside":"return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"}},{"Flat":{"kind":{"Simple":"mrx2"},"is_inside":"return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"}},{"Flat":{"kind":{"Simple":"mry1"},"is_inside":"return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"}},{"Flat":{"kind":{"Simple":"mry2"},"is_inside":"return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"}},{"Flat":{"kind":{"Simple":"mrz1"},"is_inside":"return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"}},{"Flat":{"kind":{"Simple":"mrz2"},"is_inside":"return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_texture_M);"}},{"Flat":{"kind":{"Portal":["ax","bx"]},"is_inside":"return big(x, y, first, back, red_M);"}},{"Flat":{"kind":{"Portal":["bx","cx"]},"is_inside":"return big(x, y, first, back, red_M);"}},{"Flat":{"kind":{"Portal":["cx","ax"]},"is_inside":"return big(x, y, first, back, red_M);"}},{"Flat":{"kind":{"Portal":["bx","cx"]},"is_inside":"return small(x, y, first, back, red_M);"}},{"Flat":{"kind":{"Portal":["cx","ax"]},"is_inside":"return small(x, y, first, back, red_M);"}},{"Flat":{"kind":{"Portal":["ax","bx"]},"is_inside":"return small(x, y, first, back, red_M);"}}]},"textures":{"names":["monoportal"],"storage":["scenes/monoportal.png"]},"materials":{"names":["room_green_texture","room_green","room_red","room_gray","room_black","room_blue","room_yellow","portal_orange","portal_blue","black","red","green","blue"],"storage":[{"Complex":{"code":"MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture2D(monoportal_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"}},{"Simple":{"color":[0.15478948,0.73873776,0.2186588],"normal_coef":0.5,"grid":true,"grid_scale":1.0,"grid_coef":0.3}},{"Simple":{"color":[0.8458183,0.07454156,0.07454156],"normal_coef":0.5,"grid":true,"grid_scale":1.0,"grid_coef":0.3}},{"Simple":{"color":[0.18068509,0.18068509,0.18068509],"normal_coef":0.5,"grid":true,"grid_scale":1.0,"grid_coef":0.3}},{"Simple":{"color":[0.029196177,0.029196177,0.029196177],"normal_coef":0.5,"grid":true,"grid_scale":1.0,"grid_coef":0.3}},{"Simple":{"color":[0.116810285,0.26798066,0.9083436],"normal_coef":0.5,"grid":true,"grid_scale":1.0,"grid_coef":0.2}},{"Simple":{"color":[0.7647179,0.7024815,0.061205085],"normal_coef":0.5,"grid":true,"grid_scale":1.0,"grid_coef":0.3}},{"Complex":{"code":"MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nreturn result;"}},{"Complex":{"code":"MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nreturn result;"}},{"Simple":{"color":[0.0,0.0,0.0],"normal_coef":0.5,"grid":false,"grid_scale":4.0,"grid_coef":0.3}},{"Simple":{"color":[0.7438918,0.053517483,0.053517483],"normal_coef":0.5,"grid":false,"grid_scale":4.0,"grid_coef":0.3}},{"Simple":{"color":[0.094229475,0.7032435,0.1312657],"normal_coef":0.5,"grid":false,"grid_scale":4.0,"grid_coef":0.3}},{"Simple":{"color":[0.086279266,0.12192026,0.5451278],"normal_coef":0.5,"grid":false,"grid_scale":4.0,"grid_coef":0.3}}]},"library":{"names":["room","trefoil knot","box"],"storage":["int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n","int get_teleport(bool first, bool back) {\n  int teleport = TELEPORT;\n  if (!back) teleport = NOT_INSIDE;\n  return teleport;\n}\n\nint big(float x, float y, bool first, bool back, int material) {\n  if (between(0., y, h_u) && between(0., abs(x), w_u)) {\n    return get_teleport(first, back);\n  } else if (between(0., y, h_u + black_border_u) && between(0., abs(x), w_u + black_border_u) && first) {\n    return black_M;\n  } else if (between(0., y, h_u + border_u + black_border_u) && between(0., abs(x), w_u + border_u + + black_border_u) && first) {\n    return material;\n  } else if (between(0., y, h_u + border_u + 2. * black_border_u) && between(0., abs(x), w_u + border_u + 2. * black_border_u) && first) {\n    return black_M;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n\nint small(float x, float y, bool first, bool back, int material) {\n  if (between(-w_u, y, 0.) && between(0., x, w_u)) {\n    return get_teleport(first, back);\n  } else if (between(-(w_u + black_border_u), y, 0.) && between(0., x, w_u + black_border_u) && first) {\n    return black_M;\n  } else if (between(-(w_u + border_u + black_border_u), y, 0.) && between(0., x, w_u + border_u + black_border_u) && first) {\n    return material;\n  } else if (between(-(w_u + border_u + 2. * black_border_u), y, 0.) && between(0., x, w_u + border_u + 2. * black_border_u) && first) {\n    return black_M;\n  } else {\n    return NOT_INSIDE;\n  }\n}","SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)));\n}"]},"user_uniforms":{"uniforms":[false,false,false,false,false,false,true,true,true,false,true],"matrices":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false]},"animation_stages":{"names":[],"storage":[]},"current_stage":5}