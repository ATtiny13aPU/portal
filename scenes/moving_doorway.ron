(desc:(eng:"Since portals made from doowray, then any portal law applied to the back-connected-portals must act exactly as it acts for the doorway. This is the portal axiom.\n\nIn this scene the axiom showed on portal movement.\n\nMain essence of this scene is that portals can move simultaneously, and they will not affect teleported object speed or anything. This explains why rotating of the Earth will not considered as portal movement in the game.\n\nThe difficulties begin when portals has non-zero relative speed.",rus:"Так как порталы созданы из дверного проёма, значит любые портальные законы, который применяется к порталами соединённым спинами, должны совпадать с поведением дверного проёма. Это аксиома порталов.\n\nВ данной сцене показывается эта аксиома с точки зрения движения порталов.\n\nГлавная суть данной сцены в том, что вход и выход должны одновременно совершать одинаковые движения, чтобы относительно друг друга они не двигались, тогда они будут вести себя как обычный дверной проём. Это объясняет почему вращение земли никак не мешает порталам.\n\nСложности начинаются когда порталы обладают скоростью относительно друг друга."),cam:(look_at:(0,0,0),alpha:-34.95143888239678,beta:1.116810893058779,r:3.8500000000000116,offset_after_material:0.000025),uniforms:(ids:(available:[],max:16),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Progress(0),"distance"),(9):Inline(Progress(0)),(10):Inline(Formula(("inv(distance)"))),(11):Inline(Formula(("abs((time * 0.6) % 2-1)*2.0"))),(12):Inline(Formula(("abs((time * 0.6) % 2-1)*2.0-distance-0.001"))),(13):Inline(Formula(("(time % 1) * 2*pi()"))),(14):Inline(Progress(1)),(15):Named(Formula(("((time * 0.5) % 1) * 2*pi()")),"hack")},storage_order:[(0),(1),(2),(6),(7),(8),(15)]),matrices:(ids:(available:[],max:28),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((15)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"a"),(14):Named(Mul(to:Some(((13))),what:Some(((26)))),"b"),(15):Named(Simple(offset:(0,0,-0.5),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),"tr"),(16):Named(Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((15)))),"tr_teleported"),(17):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((11))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(18):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((12))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(19):Inline(Simple(offset:(0,0,0.5),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(20):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((15)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(21):Inline(Mul(to:Some(((22))),what:Some(((13))))),(22):Inline(Simple(offset:(0,0,-0.001),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(23):Inline(Simple(offset:(0,0,-0.5),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(24):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((15)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(25):Inline(Mul(to:Some(((13))),what:Some(((26))))),(26):Inline(Simple(offset:(0,0,2.5),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(27):Inline(Simple(offset:(0,0,-0.5),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)))},storage_order:[(0),(13),(14),(15),(16)]),objects:(ids:(available:[],max:9),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Flat(kind:Portal(Some(((13))),Some(((14)))),is_inside:(("return is_inside_portal(\n  square_distance(x, y), \n  1.0, \n  0.07,\n  portal_orange_black_M, \n  portal_blue_black_M, \n  grid_gray_M, \n  grid_gray_M, \n  back,\n  first\n);"))),"portal"),(7):Named(Flat(kind:Simple(Some(((15)))),is_inside:(("if ((a_mat_inv * pos).z < 0.) return NOT_INSIDE;\n\nreturn is_inside_triangle(x, y, 2.0, 1.5, 0.03, triangle_white_M, triangle_black_M);"))),"triangle"),(8):Named(Flat(kind:Simple(Some(((16)))),is_inside:(("if ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\n\nreturn is_inside_triangle(x, y, 2.0, 1.5, 0.03, triangle_white_M, triangle_black_M);"))),"triangle teleported")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8)]),cameras:(ids:(available:[],max:0),storage:{},storage_order:[]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:21),storage:{(0):Named(Simple(color:(0.7647179,0.7024815,0.061205085),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.029196177,0.029196177,0.029196177),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8458183,0.07454156,0.07454156),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.18068509,0.18068509,0.18068509),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.116810285,0.26798066,0.9083436),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15478948,0.73873776,0.2186588),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture2D(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1.16810285e-1, 2.6798066e-1, 9.083436e-1), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture2D(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14)]),library:(ids:(available:[],max:4),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)));\n}")),"box"),(2):Named((("int is_inside_triangle(float x, float y, float angle, float width, float border, int inner_m, int border_m) {\n  float value = width * 0.7 - abs(x)*angle;\n  if (between(border, y, value - border * angle)) {\n    return inner_m;\n  } else if (between(0., y, value)) {\n    return border_m;\n  } else {\n    return NOT_INSIDE;\n  }\n}")),"triangle"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n        return TELEPORT;\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  if (distance < size + border) return material;\n\n  return NOT_INSIDE;\n}\n")),"portal")},storage_order:[(0),(1),(2),(3)]),animations_filters:(uniforms:({((15)):false,((8)):true,((2)):false,((7)):false,((0)):false,((9)):true,((6)):true,((1)):false}),matrices:({((15)):true,((16)):false,((13)):true,((14)):true,((0)):false}),cameras:({})),elements_descriptions:(uniforms:({((6)):(help_description:None,overrided_name:""),((9)):(help_description:None,overrided_name:"Progress"),((8)):(help_description:None,overrided_name:"Distance")}),matrices:({((15)):(help_description:None,overrided_name:""),((14)):(help_description:None,overrided_name:""),((13)):(help_description:None,overrided_name:"")}),cameras:({})),user_uniforms:(uniforms:({((9)):false,((8)):false,((7)):false,((1)):false,((2)):false,((6)):false,((15)):false,((0)):false}),matrices:({((14)):false,((16)):false,((13)):false,((0)):false,((15)):false})),animation_stages:(ids:(available:[],max:3),storage:{(0):Named((name:(eng:"Doorway moving",rus:"Дверной проём двигается"),description:Some((eng:"If doorway moved around non-moved object and not moves it, then exactly the same portals can move around the object and not affect it.",rus:"Если дверной проём двигается вокруг неподвижного объекта, то точно так же порталы могут двигаться вокруг объекта не двигая его.")),uniforms:({((0)):FromDev,((8)):ProvidedToUser,((9)):FromDev,((7)):FromDev,((15)):FromDev,((1)):FromDev,((2)):FromDev,((6)):Changed(Some(((10))))}),matrices:({((0)):FromDev,((15)):Changed(Some(((19)))),((13)):Changed(Some(((17)))),((14)):Changed(Some(((18)))),((16)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"moving"),(1):Named((name:(eng:"Rotating doorway",rus:"Вращающийся дверной проём"),description:Some((eng:"If doorway can rotate around object without affecting it...",rus:"Если дверной проём может вращаться вокруг объекта, то...")),uniforms:({((6)):Changed(Some(((14)))),((1)):FromDev,((0)):FromDev,((8)):FromDev,((15)):FromDev,((2)):FromDev,((7)):FromDev}),matrices:({((16)):FromDev,((13)):Changed(Some(((20)))),((14)):Changed(Some(((21)))),((0)):FromDev,((15)):Changed(Some(((23))))}),original_cam_button:false,set_cam:None,cams:{}),"rotating doorway"),(2):Named((name:(eng:"Rotating portals",rus:"Вращающиеся порталы"),description:Some((eng:"...then portals can do that rotation too without affecting object.",rus:"...порталы так же могут вращаться вокруг этого объекта, не двигая его.")),uniforms:({((8)):FromDev,((2)):FromDev,((1)):FromDev,((15)):FromDev,((0)):FromDev,((6)):FromDev,((7)):FromDev}),matrices:({((14)):Changed(Some(((25)))),((16)):FromDev,((15)):Changed(Some(((27)))),((0)):FromDev,((13)):Changed(Some(((24))))}),original_cam_button:false,set_cam:None,cams:{}),"rotating portals")},storage_order:[(0),(1),(2)]),current_stage:Some(((2))),dev_stage:(uniforms:({((0)):Float((min:Some(0),max:None,value:4)),((7)):Bool(true),((2)):Float((min:Some(0),max:None,value:4)),((8)):Progress(0),((15)):Formula(("((time * 0.5) % 1) * 2*pi()")),((6)):Progress(0),((1)):Float((min:Some(0),max:None,value:4))}),matrices:({((15)):Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),((14)):Simple(offset:(0,0,2.5),scale:1,rotate:(0,0.8726646259971648,0),mirror:(false,false,false)),((13)):Simple(offset:(0,0,0),scale:1,rotate:(0,0.8726646259971648,0),mirror:(false,false,false)),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((16)):Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((15))))})),use_time:true)