(desc:(eng:"",rus:""),cam:(look_at:(15.001999999999999,0.001,0.001),alpha:-74.53130627597997,beta:1.055847773151942,r:2.6296018031556474,offset_after_material:0.00008),uniforms:(ids:(available:[],max:50),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Bool(false),"mirror"),(9):Named(Float((min:Some(0),max:None,value:0.21)),"a"),(10):Named(Float((min:Some(0),max:None,value:0.35)),"b"),(11):Named(Bool(true),"enable_black_border"),(12):Named(Bool(true),"enable_border"),(13):Inline(Formula(("a"))),(14):Inline(Formula(("-a+b/2"))),(15):Inline(Formula(("c"))),(16):Inline(Formula(("pi()*rot"))),(17):Inline(Formula(("-0.225\n"))),(18):Inline(Formula(("-b+a*2"))),(19):Inline(Formula(("-b+a"))),(20):Inline(Formula(("1.5*pi()*rot"))),(21):Inline(Formula(("2*a*rot"))),(22):Inline(Formula(("2*a*rot"))),(23):Inline(Formula(("2*a*rot"))),(24):Inline(Formula(("-a"))),(25):Inline(Formula(("-a"))),(26):Inline(Formula(("-a"))),(27):Inline(Formula(("pi()*rot"))),(28):Inline(Formula(("1.5*pi()*rot"))),(29):Named(Formula(("0.03")),"border_size"),(30):Named(Formula(("0.005")),"black_border_size"),(31):Named(TrefoilSpecial((((true,3,1),(true,7,2),(true,11,0),(true,0,1),(true,16,0),(true,14,2),(true,12,0),(true,1,2),(true,17,1),(true,15,2),(true,13,1),(true,2,0),(true,6,0),(true,10,1),(true,5,2),(true,9,2),(true,4,0),(true,8,1)))),"trefoil"),(32):Inline(TrefoilSpecial((((true,1,0),(true,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(33):Inline(TrefoilSpecial((((true,1,0),(true,2,0),(true,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(34):Inline(TrefoilSpecial((((true,3,0),(true,4,0),(true,5,0),(true,0,0),(true,1,0),(true,2,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(35):Inline(TrefoilSpecial((((true,7,0),(true,3,0),(false,0,0),(true,1,0),(true,6,0),(false,0,0),(true,4,0),(true,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(36):Inline(TrefoilSpecial((((true,3,0),(true,0,0),(false,0,0),(true,8,0),(true,7,0),(true,1,0),(true,5,0),(true,4,0),(true,6,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(37):Inline(TrefoilSpecial((((true,3,0),(true,4,0),(true,5,0),(true,6,0),(true,7,0),(true,8,0),(true,0,0),(true,1,0),(true,2,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(38):Inline(TrefoilSpecial((((true,3,0),(true,4,0),(true,5,0),(true,6,0),(true,7,0),(true,8,0),(true,9,0),(true,10,0),(true,11,0),(true,0,0),(true,1,0),(true,2,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(39):Inline(TrefoilSpecial((((true,3,1),(true,7,2),(true,11,0),(true,0,1),(true,16,0),(true,14,2),(true,12,0),(true,1,2),(true,17,1),(true,15,2),(true,13,1),(true,2,0),(true,6,0),(true,10,1),(true,5,2),(true,9,2),(true,4,0),(true,8,1))))),(40):Named(Bool(false),"use_origin_room"),(41):Inline(TrefoilSpecial((((false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0))))),(42):Inline(Bool(true)),(43):Inline(Bool(true)),(44):Inline(Bool(false)),(45):Inline(Bool(false)),(46):Inline(Bool(false)),(47):Inline(Bool(false)),(48):Inline(Bool(false)),(49):Inline(Bool(false))},storage_order:[(0),(1),(2),(6),(7),(8),(9),(10),(11),(12),(29),(30),(31),(40)]),matrices:(ids:(available:[],max:63),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Mul(to:Some(((44))),what:Some(((28)))),"portal1"),(14):Named(Mul(to:Some(((43))),what:Some(((29)))),"portal2"),(15):Named(Mul(to:Some(((45))),what:Some(((30)))),"portal3"),(16):Named(Simple(offset:(0,0,0),scale:1,rotate:(4.71238898038469,0,0),mirror:(false,false,false)),"c1"),(17):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"p1"),(18):Named(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,3.141592653589793,1.5707963267948966),mirror:(false,false,false)),"p2"),(19):Named(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,1.5707963267948966,0),mirror:(false,false,false)),"a1"),(20):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"b1"),(21):Named(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,1.5707963267948966,0),mirror:(false,false,false)),"p3"),(22):Named(Mul(to:Some(((17))),what:Some(((15)))),"portal3_p1"),(23):Named(Mul(to:Some(((18))),what:Some(((15)))),"portal3_p2"),(24):Named(Mul(to:Some(((21))),what:Some(((15)))),"portal3_p3"),(25):Named(Mul(to:Some(((17))),what:Some(((36)))),"portal4_p1"),(26):Named(Mul(to:Some(((18))),what:Some(((36)))),"portal4_p2"),(27):Named(Mul(to:Some(((21))),what:Some(((36)))),"portal4_p3"),(28):Named(If(condition:Yes(Some(((40)))),then:Some(((61))),otherwise:Some(((60)))),"room_r"),(29):Named(Simple(offset:(-15,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_b"),(30):Named(Simple(offset:(0,15,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_g"),(31):Inline(Parametrized(offset:(x:No(0.25),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(32):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((27)))),z:Yes(Some(((28))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(33):Named(Mul(to:Some(((17))),what:Some(((13)))),"portal1_p1"),(34):Named(Mul(to:Some(((18))),what:Some(((13)))),"portal1_p2"),(35):Named(Mul(to:Some(((21))),what:Some(((13)))),"portal1_p3"),(36):Named(Mul(to:Some(((46))),what:Some(((42)))),"portal4"),(37):Named(Mul(to:Some(((17))),what:Some(((14)))),"portal2_p1"),(38):Named(Mul(to:Some(((18))),what:Some(((14)))),"portal2_p2"),(39):Named(Mul(to:Some(((21))),what:Some(((14)))),"portal2_p3"),(40):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(41):Named(Mul(to:Some(((50))),what:Some(((48)))),"portal5"),(42):Named(Simple(offset:(0,-15,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_y"),(43):Inline(Simple(offset:(0.01,0,0),scale:1,rotate:(0,0.08726646259971647,0),mirror:(false,false,false))),(44):Inline(Mul(to:Some(((59))),what:Some(((62))))),(45):Inline(Simple(offset:(0.01,0,0),scale:1,rotate:(0,0,0.08726646259971647),mirror:(false,false,false))),(46):Inline(Simple(offset:(0.01,0,0),scale:1,rotate:(6.19591884457987,0,0),mirror:(false,false,false))),(47):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"empty"),(48):Named(Simple(offset:(0,0,15),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_v"),(49):Named(Simple(offset:(0,0,-15),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_gr"),(50):Inline(Simple(offset:(0.01,0,0),scale:1,rotate:(0,6.19591884457987,0),mirror:(false,false,false))),(51):Named(Mul(to:Some(((52))),what:Some(((49)))),"portal6"),(52):Inline(Simple(offset:(0.01,0,0),scale:1,rotate:(0,0,6.19591884457987),mirror:(false,false,false))),(53):Named(Mul(to:Some(((17))),what:Some(((41)))),"portal5_p1"),(54):Named(Mul(to:Some(((18))),what:Some(((41)))),"portal5_p2"),(55):Named(Mul(to:Some(((21))),what:Some(((41)))),"portal5_p3"),(56):Named(Mul(to:Some(((17))),what:Some(((51)))),"portal6_p1"),(57):Named(Mul(to:Some(((18))),what:Some(((51)))),"portal6_p2"),(58):Named(Mul(to:Some(((21))),what:Some(((51)))),"portal6_p3"),(59):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"portal0"),(60):Inline(Simple(offset:(15,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(61):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(62):Inline(Simple(offset:(0.001,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)))},storage_order:[(47),(0),(19),(20),(16),(17),(18),(21),(28),(29),(30),(42),(48),(49),(13),(14),(15),(36),(41),(51),(33),(34),(35),(37),(38),(39),(22),(23),(24),(25),(26),(27),(53),(54),(55),(56),(57),(58),(59)]),objects:(ids:(available:[],max:13),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Complex(kind:Simple(Some(((28)))),intersect:(("if (use_origin_room_u == 1) return scene_intersection_none;\n\nreturn intersect_box(r, room_red_M, vec3(3.9, 3.9, 3.9));"))),"room_r"),(7):Named(Complex(kind:Simple(Some(((29)))),intersect:(("return intersect_box(r, room_blue_M, vec3(4., 4., 4.));"))),"room_b"),(8):Named(Complex(kind:Simple(Some(((30)))),intersect:(("return intersect_box(r, room_green_M, vec3(4., 4., 4.));"))),"room_g"),(9):Named(Complex(kind:Simple(Some(((42)))),intersect:(("return intersect_box(r, room_yellow_M, vec3(4., 4., 4.));"))),"room_y"),(10):Named(Complex(kind:Simple(Some(((48)))),intersect:(("return intersect_box(r, room_violet_M, vec3(4., 4., 4.));"))),"room_v"),(11):Named(Complex(kind:Portal(Some(((47))),Some(((47)))),intersect:(("SceneIntersection sc = scene_intersection_none;\nbool f = first;\n\nif (ts_0_trefoil_u >= 10000) sc=pp2(sc,r,f,0,ts_0_trefoil_u-10000);\nif (ts_1_trefoil_u >= 10000) sc=pp2(sc,r,f,1,ts_1_trefoil_u-10000);\nif (ts_2_trefoil_u >= 10000) sc=pp2(sc,r,f,2,ts_2_trefoil_u-10000);\nif (ts_3_trefoil_u >= 10000) sc=pp2(sc,r,f,3,ts_3_trefoil_u-10000);\nif (ts_4_trefoil_u >= 10000) sc=pp2(sc,r,f,4,ts_4_trefoil_u-10000);\nif (ts_5_trefoil_u >= 10000) sc=pp2(sc,r,f,5,ts_5_trefoil_u-10000);\nif (ts_6_trefoil_u >= 10000) sc=pp2(sc,r,f,6,ts_6_trefoil_u-10000);\nif (ts_7_trefoil_u >= 10000) sc=pp2(sc,r,f,7,ts_7_trefoil_u-10000);\nif (ts_8_trefoil_u >= 10000) sc=pp2(sc,r,f,8,ts_8_trefoil_u-10000);\nif (ts_9_trefoil_u >= 10000) sc=pp2(sc,r,f,9,ts_9_trefoil_u-10000);\nif (ts_10_trefoil_u >= 10000) sc=pp2(sc,r,f,10,ts_10_trefoil_u-10000);\nif (ts_11_trefoil_u >= 10000) sc=pp2(sc,r,f,11,ts_11_trefoil_u-10000);\nif (ts_12_trefoil_u >= 10000) sc=pp2(sc,r,f,12,ts_12_trefoil_u-10000);\nif (ts_13_trefoil_u >= 10000) sc=pp2(sc,r,f,13,ts_13_trefoil_u-10000);\nif (ts_14_trefoil_u >= 10000) sc=pp2(sc,r,f,14,ts_14_trefoil_u-10000);\nif (ts_15_trefoil_u >= 10000) sc=pp2(sc,r,f,15,ts_15_trefoil_u-10000);\nif (ts_16_trefoil_u >= 10000) sc=pp2(sc,r,f,16,ts_16_trefoil_u-10000);\nif (ts_17_trefoil_u >= 10000) sc=pp2(sc,r,f,17,ts_17_trefoil_u-10000);\n\nreturn sc;"))),"Trefoil knot"),(12):Named(Complex(kind:Simple(Some(((49)))),intersect:(("return intersect_box(r, room_gray_M, vec3(4., 4., 4.));"))),"room_gr")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(12),(11)]),cameras:(ids:(available:[],max:6),storage:{(0):Named((look_at:MatrixCenter(Some(((13)))),alpha:-74.43336559976767,beta:1.377257115440913,r:1.3494015130034247),"portal1"),(1):Named((look_at:MatrixCenter(Some(((14)))),alpha:-74.43336559976767,beta:1.377257115440913,r:1.3494015130034247),"portal2"),(2):Named((look_at:MatrixCenter(Some(((15)))),alpha:-74.43336559976767,beta:1.377257115440913,r:1.3494015130034247),"portal3"),(3):Named((look_at:MatrixCenter(Some(((36)))),alpha:-74.43336559976767,beta:1.377257115440913,r:1.3494015130034247),"portal4"),(4):Named((look_at:MatrixCenter(Some(((41)))),alpha:-74.49338800157742,beta:1.1409748967462257,r:2.3905470937778626),"portal5"),(5):Named((look_at:MatrixCenter(Some(((51)))),alpha:-74.49338800157742,beta:1.1409748967462257,r:2.3905470937778626),"portal6")},storage_order:[(0),(1),(2),(3),(4),(5)]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:23),storage:{(0):Named(Simple(color:(0.7647058823529411,0.7019607843137254,0.058823529411764705),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.027450980392156862,0.027450980392156862,0.027450980392156862),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8431372549019608,0.36470588235294116,0.36470588235294116),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.1803921568627451,0.1803921568627451,0.1803921568627451),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.116810285,0.26798066,0.9083436),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15294117647058825,0.7372549019607844,0.21568627450980393),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1.16810285e-1, 2.6798066e-1, 9.083436e-1), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black"),(21):Named(Complex(code:(("r.o += r.d * _offset_after_material;\nr.o = get_mat_inv(int(hit.u)) * r.o;\nr.d = get_mat_inv(int(hit.u)) * r.d;\nr.o = get_mat(int(hit.v)) * r.o;\nr.d = get_mat(int(hit.v)) * r.d;\nr.d = normalize(r.d);\nreturn material_next(vec3(1.), r);"))),"custom_teleport"),(22):Named(Simple(color:(0.5215686274509804,0.2196078431372549,0.6),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_violet")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(22),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14),(21)]),library:(ids:(available:[],max:6),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material, vec3 rad) {\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)));\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y, float a, float b) {\n  return max(abs(x)-a+1., abs(y)-b+1.);\n}\n\nfloat triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance < size) return material_inner;\r\n  if (distance < size + border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"portal"),(4):Named((("int is_inside_part(vec4 pos, float x, float y, bool back) {\n  return is_inside_square(x, y, 0.3, 0.3, room_yellow_M);\n}\n\nSurfaceIntersection cap_body(Ray r, vec3 pa, vec3 pb, float radius) {\n    vec3 ro = r.o.xyz;\n    vec3 rd = r.d.xyz;\n    vec3 ba = pb - pa;\n    vec3 oa = ro - pa;\n\n    float baba = dot(ba,ba);\n    float bard = dot(ba,rd);\n    float baoa = dot(ba,oa);\n    float rdoa = dot(rd,oa);\n    float oaoa = dot(oa,oa);\n\n    float a = baba      - bard*bard;\n    float b = baba*rdoa - baoa*bard;\n    float c = baba*oaoa - baoa*baoa - radius*radius*baba;\n    float h = b*b - a*c;\n    if( h>=0.0 ) {\n        float t = (-b-sqrt(h))/a;\n        float y = baoa + t*bard;\n        // body\n        if( y>0.0 && y<baba ) {\n            vec3 pos = ro + rd * t;\n            return SurfaceIntersection(true, t, 0., 0., cap_normal(pos, pa, pb, radius));\n        }\n    }\n    return intersection_none;\n}\n\nbool is_inside_box(Ray r, vec3 size) {\n  vec3 m = 1.0/r.d.xyz;\n  vec3 n = m*r.o.xyz;\n  vec3 k = abs(m)*size;\n  vec3 t1 = -n - k;\n  vec3 t2 = -n + k;\n\n  float tN = max( max( t1.x, t1.y ), t1.z );\n  float tF = min( min( t2.x, t2.y ), t2.z );\n\n  float t = tN;\n  if (tN < 0.0 && tF > 0.0) {\n    t = tF;\n  } \n\n  return !(tN > tF || t < 0.0);\n}\n\nSceneIntersection intersect_part(Ray r, bool first, bool is_portal, bool back, int color) {\n  float b = border_size_u + black_border_size_u+0.02;\n  vec3 offset_box = vec3(b_u, a_u*2.-b_u, a_u);\n  vec3 size_box = vec3(b_u+b, b_u+b, a_u+b);\n  r.o.xyz -= offset_box;\n  if (!is_inside_box(r, size_box)) return scene_intersection_none;\n  r.o.xyz += offset_box;  \n\n\n  SceneIntersection i = SceneIntersection(0, intersection_none);\n  SurfaceIntersection hit = intersection_none;\n  SurfaceIntersection hit2 = intersection_none;\n  SurfaceIntersection hita = intersection_none;\n  SurfaceIntersection hitb = intersection_none;\n  vec3 normal = vec3(0.);\n  float sz = 0.1;\n  float szb = 0.01;\n  vec4 ro = r.o;\n  float radius = border_size_u;\n\n  int border_material = color;\n\nif (enable_border_u == 1 && !back) {\n  vec3 c1 = vec3(0., a_u*2., 0.);\n  vec3 c2 = vec3(b_u*2., a_u*2., 0.);\n  vec3 c3 = vec3(b_u*2., (-b_u+a_u)*2., 0.);\n  vec3 c4 = vec3(b_u*2.,(-b_u+a_u)*2., a_u*2.);\n  vec3 c5 = vec3(0., (-b_u+a_u)*2., a_u*2.);\n  vec3 c6 = vec3(0., 0., a_u*2.);\n  float br = black_border_size_u;\n\n  hit = cap_body(r, c1, c2, radius);\n  if (nearer(i, hit)) {\n      i.material = border_material;\n      i.hit = hit;\n  }\nif (enable_black_border_u == 1) {\n  hita = hit;\n  hit = cap_body(r, c1-(c2-c1)*10., c2, radius);\n  hit2 = cap_body(r, c1, c2-vec3(radius+br, 0., 0.), radius+br);\n  if (!hita.hit && !hit.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n}\n\n  hit = cap(r, c2, c3, radius);\n  if (nearer(i, hit)) {\n      i.material = border_material;\n      i.hit = hit;\n  }\nif (enable_black_border_u == 1) {\n  hitb = hit;\n  hit2 = cap_body(r, c2-vec3(0., radius+br, 0.), c3+vec3(0., radius+br, 0.), radius+br);\n  if (!hit.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n  \n  hit2 = cap(r, c2-vec3(0., radius+br, 0.), c2, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n\n  hit2 = cap(r, c2-vec3(radius+br, 0., 0.), c2, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n\n  hita = hitb;\n}\n  hit = cap(r, c3, c4, radius);\n  if (nearer(i, hit)) {\n      i.material = border_material;\n      i.hit = hit;\n  }\nif (enable_black_border_u == 1) {\n  hitb = hit;\n  hit2 = cap_body(r, c3+vec3(0., 0., radius+br), c4-vec3(0., 0., radius+br), radius+br);\n  if (!hit.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n\n  hit2 = cap(r, c3+vec3(0., radius+br, 0.), c3, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n  hit2 = cap(r, c3+vec3(0., 0., radius+br), c3, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n\n  hita = hitb;\n}\n  hit = cap(r, c4, c5, radius);\n  if (nearer(i, hit)) {\n      i.material = border_material;\n      i.hit = hit;\n  }\nif (enable_black_border_u == 1) {\n  hitb = hit;\n  hit2 = cap_body(r, c4-vec3(radius+br, 0., 0.), c5+vec3(radius+br, 0., 0.), radius+br);\n  if (!hit.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n\n  hit2 = cap(r, c4-vec3(radius+br, 0., 0.), c4, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n  hit2 = cap(r, c4-vec3(0., 0., radius+br), c4, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n\n\n  hita = hitb;\n}\n  hit = cap_body(r, c5, c6, radius);\n  if (nearer(i, hit)) {\n      i.material = border_material;\n      i.hit = hit;\n  }\nif (enable_black_border_u == 1) {\n  hitb = hit;\n  hit = cap_body(r, c6-(c5-c6)*10., c5, radius);\n  hit2 = cap_body(r, c5+vec3(0., radius+br, 0.), c6, radius+br);\n  if (!hit.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n  hit2 = cap(r, c5+vec3(radius+br, 0., 0.), c5, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n  hit2 = cap(r, c5+vec3(0., radius+br, 0.), c5, radius+br);\n  if (!hita.hit && !hitb.hit && nearer(i, hit2)) {\n    i.hit = hit2;\n    i.material = solid_black_M;\n  }\n}\n}\n\n  if (!is_portal) return i;\n  \n  r.o = ro - vec4(0., -b_u+a_u, a_u, 0.);\n  normal = -get_normal(a1_mat);\n  hit = plane_intersect(r, a1_mat_inv, get_normal(a1_mat));\n  if (nearer(i, hit)) { \n    int inside = NOT_INSIDE;\n    float distance = rect_distance(hit.u, hit.v, b_u-a_u, a_u);\n    if (distance <= 1.0 && is_collinear(hit.n, normal) == back) {\n      i.hit = hit;\n      i.material = TELEPORT;\n    }\n  }\n\n  r.o = ro - vec4(b_u, -b_u+a_u*2., 0., 0.);\n  normal = -get_normal(b1_mat);\n  hit = plane_intersect(r, b1_mat_inv, get_normal(b1_mat));\n  if (nearer(i, hit)) { \n    float distance = rect_distance(hit.u, hit.v, b_u, b_u);\n    if (distance <= 1.0 && is_collinear(hit.n, normal) == back) {\n      i.hit = hit;\n      i.material = TELEPORT;\n    }\n  }\n\n  r.o = ro - vec4(b_u, -2.*b_u+a_u*2., a_u, 0.);\n  normal = -get_normal(c1_mat);\n  hit = plane_intersect(r, c1_mat_inv, get_normal(c1_mat));\n  if (nearer(i, hit)) { \n    int inside = NOT_INSIDE;\n    float distance = rect_distance(hit.u, hit.v, b_u, a_u);\n    if (distance <= 1.0 && is_collinear(hit.n, normal) == back) {\n      i.hit = hit;\n      i.material = TELEPORT;\n    }\n  }\n\n  return i;\n}")),"part"),(5):Named((("SceneIntersection intersect_parts_helper(\n    Ray r,\n    bool first,\n    mat4 m_mat,\n    mat4 m_inv,\n    float first_no,\n    float second_no,\n    int color\n) {\n    Ray transformed_ray = transform(m_inv, r);\n    float len = length(transformed_ray.d);\n    transformed_ray.d = normalize(transformed_ray.d);\n    SceneIntersection ihit = intersect_part(transformed_ray, first, true, first, color);\n    ihit.hit.t /= len;\n    if (ihit.hit.hit && ihit.material != NOT_INSIDE) { \n        if (ihit.material == TELEPORT) { \n            ihit.material = custom_teleport_M;\n            ihit.hit.u = first_no;\n            ihit.hit.v = second_no;\n        }\n        ihit.hit.n = normalize((m_mat * vec4(ihit.hit.n, 0.)).xyz);\n        return ihit;\n    }\n    return scene_intersection_none;\n}\n\nSceneIntersection intersect_parts(\n    Ray r,\n    bool first,\n    mat4 first_mat,\n    mat4 first_inv,\n    float first_no,\n    mat4 second_mat,\n    mat4 second_inv,\n    float second_no,\n    int color\n) {\n    if (!first) {\n        return intersect_parts_helper(r, first, first_mat, first_inv, first_no, second_no, color);\n    } else {\n        return intersect_parts_helper(r, first, second_mat, second_inv, second_no, first_no, color);\n    }\n}\n\nmat4 get_mat(int number) {\n         if (number == 0) { return portal1_p1_mat; }\n    else if (number == 1) { return portal1_p2_mat; }\n    else if (number == 2) { return portal1_p3_mat; }\n\n    else if (number == 3) { return portal2_p1_mat; }\n    else if (number == 4) { return portal2_p2_mat; }\n    else if (number == 5) { return portal2_p3_mat; }\n\n    else if (number == 6) { return portal3_p1_mat; }\n    else if (number == 7) { return portal3_p2_mat; }\n    else if (number == 8) { return portal3_p3_mat; }\n\n    else if (number == 9) { return portal4_p1_mat; }\n    else if (number ==10) { return portal4_p2_mat; }\n    else if (number ==11) { return portal4_p3_mat; }\n\n    else if (number ==12) { return portal5_p1_mat; }\n    else if (number ==13) { return portal5_p2_mat; }\n    else if (number ==14) { return portal5_p3_mat; }\n\n    else if (number ==15) { return portal6_p1_mat; }\n    else if (number ==16) { return portal6_p2_mat; }\n    else if (number ==17) { return portal6_p3_mat; }\n\n    else { return portal1_p1_mat; }\n}\n\nmat4 get_mat_inv(int number) {\n         if (number == 0) { return portal1_p1_mat_inv; }\n    else if (number == 1) { return portal1_p2_mat_inv; }\n    else if (number == 2) { return portal1_p3_mat_inv; }\n\n    else if (number == 3) { return portal2_p1_mat_inv; }\n    else if (number == 4) { return portal2_p2_mat_inv; }\n    else if (number == 5) { return portal2_p3_mat_inv; }\n\n    else if (number == 6) { return portal3_p1_mat_inv; }\n    else if (number == 7) { return portal3_p2_mat_inv; }\n    else if (number == 8) { return portal3_p3_mat_inv; }\n\n    else if (number == 9) { return portal4_p1_mat_inv; }\n    else if (number ==10) { return portal4_p2_mat_inv; }\n    else if (number ==11) { return portal4_p3_mat_inv; }\n\n    else if (number ==12) { return portal5_p1_mat_inv; }\n    else if (number ==13) { return portal5_p2_mat_inv; }\n    else if (number ==14) { return portal5_p3_mat_inv; }\n\n    else if (number ==15) { return portal6_p1_mat_inv; }\n    else if (number ==16) { return portal6_p2_mat_inv; }\n    else if (number ==17) { return portal6_p3_mat_inv; }\n\n    else { return portal1_p1_mat; }\n}\n\nSceneIntersection pp2(\n    SceneIntersection sc,\n    Ray r,\n    bool first,\n    int a,\n    int b\n) {\n    int color = 0;\n    while (b >= 1000) {\n       b -= 1000;\n       color += 1;\n    }\n    int color2 = room_red_M;\n    if (color == 0) color2 = room_red_M;\n    if (color == 1) color2 = room_green_M;\n    if (color == 2) color2 = room_blue_M;\n    if (color == 3) color2 = room_yellow_M;\n    if (color == 4) color2 = room_violet_M;\n    if (color == 5) color2 = room_gray_M;\n    SceneIntersection ihit = intersect_parts(\n      r,\n      first,\n      get_mat(a),\n      get_mat_inv(a),\n      float(a) + 0.1,\n      get_mat(b),\n      get_mat_inv(b),\n      float(b) + 0.1,\n      color2\n    );\n    if (nearer(sc, ihit)) { sc = ihit; }\n    return sc;\n}\n\nSceneIntersection pp(\n    SceneIntersection sc,\n    Ray r,\n    bool first,\n    int ar, int ap,\n    int br, int bp\n) {\n    int a = ar * 3 + ap;\n    int b = br * 3 + bp;\n    return pp2(sc, r, first, a, b);\n}")),"part2")},storage_order:[(2),(0),(1),(3),(4),(5)]),animations_filters:(uniforms:({((40)):true,((12)):true,((29)):false,((10)):false,((9)):false,((30)):false,((1)):false,((0)):false,((6)):false,((11)):true,((31)):true,((8)):false,((7)):false,((2)):false}),matrices:({((13)):false,((53)):false,((21)):false,((49)):false,((42)):false,((0)):false,((28)):false,((18)):false,((35)):false,((24)):false,((37)):false,((16)):false,((20)):false,((23)):false,((22)):false,((58)):false,((56)):false,((59)):false,((41)):false,((15)):false,((51)):false,((34)):false,((39)):false,((29)):false,((27)):false,((38)):false,((54)):false,((14)):false,((47)):false,((26)):false,((19)):false,((33)):false,((36)):false,((25)):false,((57)):false,((17)):false,((30)):false,((55)):false,((48)):false}),cameras:({((2)):true,((3)):true,((1)):true,((0)):true,((4)):true,((5)):true})),elements_descriptions:(uniforms:({((11)):(help_description:None,overrided_name:"Вnable black border"),((31)):(help_description:None,overrided_name:"Trefoil"),((40)):(help_description:None,overrided_name:"Enable other colors in the first room"),((12)):(help_description:None,overrided_name:"Вnable border")}),matrices:({}),cameras:({((2)):(help_description:None,overrided_name:"Room 3 (green)"),((5)):(help_description:None,overrided_name:"Room 6 (gray)"),((0)):(help_description:None,overrided_name:"Room 1 (red)"),((1)):(help_description:None,overrided_name:"Room 2 (blue)"),((4)):(help_description:None,overrided_name:"Room 5 (violet)"),((3)):(help_description:None,overrided_name:"Room 4 (yellow)")})),user_uniforms:(uniforms:({((7)):false,((31)):false,((10)):false,((12)):true,((9)):false,((8)):false,((0)):false,((6)):false,((29)):false,((30)):false,((1)):false,((40)):false,((2)):false,((11)):true}),matrices:({((39)):false,((17)):false,((0)):false,((26)):false,((18)):false,((24)):false,((53)):false,((28)):false,((16)):false,((19)):false,((20)):false,((13)):false,((37)):false,((15)):false,((23)):false,((35)):false,((59)):false,((57)):false,((38)):false,((41)):false,((34)):false,((47)):false,((27)):false,((51)):false,((55)):false,((25)):false,((48)):false,((33)):false,((58)):false,((49)):false,((54)):false,((56)):false,((22)):false,((42)):false,((30)):false,((36)):false,((21)):false,((29)):false,((14)):false})),animation_stages:(ids:(available:[],max:9),storage:{(0):Named((name:(eng:"Self-hiding monoportal",rus:"Self-hiding monoportal"),description:None,uniforms:({((2)):FromDev,((30)):FromDev,((0)):FromDev,((6)):FromDev,((1)):FromDev,((29)):FromDev,((10)):FromDev,((11)):FromDev,((12)):FromDev,((31)):ChangedAndToUser(Some(((32)))),((8)):FromDev,((40)):Changed(Some(((42)))),((7)):FromDev,((9)):FromDev}),matrices:({((16)):FromDev,((22)):FromDev,((37)):FromDev,((25)):FromDev,((33)):FromDev,((54)):FromDev,((30)):FromDev,((23)):FromDev,((0)):FromDev,((35)):FromDev,((38)):FromDev,((55)):FromDev,((57)):FromDev,((14)):FromDev,((29)):FromDev,((58)):FromDev,((17)):FromDev,((18)):FromDev,((59)):FromDev,((48)):FromDev,((49)):FromDev,((19)):FromDev,((13)):FromDev,((21)):FromDev,((41)):FromDev,((39)):FromDev,((42)):FromDev,((28)):FromDev,((51)):FromDev,((24)):FromDev,((47)):FromDev,((53)):FromDev,((36)):FromDev,((20)):FromDev,((56)):FromDev,((27)):FromDev,((15)):FromDev,((34)):FromDev,((26)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((3)):false,((2)):false,((5)):false,((1)):false,((4)):false,((0)):true}),"Self-hiding monoportal"),(1):Named((name:(eng:"Rotating monoportal",rus:"Rotating monoportal"),description:None,uniforms:({((1)):FromDev,((8)):FromDev,((2)):FromDev,((31)):ChangedAndToUser(Some(((33)))),((30)):FromDev,((9)):FromDev,((0)):FromDev,((12)):FromDev,((7)):FromDev,((10)):FromDev,((40)):Changed(Some(((43)))),((6)):FromDev,((29)):FromDev,((11)):FromDev}),matrices:({((19)):FromDev,((53)):FromDev,((33)):FromDev,((41)):FromDev,((16)):FromDev,((38)):FromDev,((18)):FromDev,((0)):FromDev,((37)):FromDev,((39)):FromDev,((21)):FromDev,((54)):FromDev,((15)):FromDev,((22)):FromDev,((55)):FromDev,((48)):FromDev,((47)):FromDev,((20)):FromDev,((25)):FromDev,((27)):FromDev,((58)):FromDev,((23)):FromDev,((36)):FromDev,((49)):FromDev,((34)):FromDev,((59)):FromDev,((17)):FromDev,((28)):FromDev,((13)):FromDev,((56)):FromDev,((35)):FromDev,((29)):FromDev,((14)):FromDev,((30)):FromDev,((24)):FromDev,((26)):FromDev,((42)):FromDev,((57)):FromDev,((51)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((1)):false,((4)):false,((0)):true,((5)):false,((3)):false,((2)):false}),"Rotating monoportal"),(2):Named((name:(eng:"Two portals",rus:"Two portals"),description:None,uniforms:({((12)):FromDev,((6)):FromDev,((11)):FromDev,((29)):FromDev,((7)):FromDev,((8)):FromDev,((31)):ChangedAndToUser(Some(((34)))),((1)):FromDev,((40)):Changed(Some(((44)))),((10)):FromDev,((9)):FromDev,((0)):FromDev,((2)):FromDev,((30)):FromDev}),matrices:({((47)):FromDev,((19)):FromDev,((56)):FromDev,((26)):FromDev,((18)):FromDev,((21)):FromDev,((48)):FromDev,((30)):FromDev,((58)):FromDev,((28)):FromDev,((15)):FromDev,((13)):FromDev,((41)):FromDev,((24)):FromDev,((51)):FromDev,((29)):FromDev,((17)):FromDev,((39)):FromDev,((36)):FromDev,((49)):FromDev,((38)):FromDev,((27)):FromDev,((35)):FromDev,((53)):FromDev,((16)):FromDev,((42)):FromDev,((57)):FromDev,((37)):FromDev,((59)):FromDev,((0)):FromDev,((22)):FromDev,((25)):FromDev,((55)):FromDev,((33)):FromDev,((54)):FromDev,((14)):FromDev,((20)):FromDev,((23)):FromDev,((34)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((4)):false,((5)):false,((0)):true,((1)):true,((2)):false,((3)):false}),"Two portals"),(3):Named((name:(eng:"Three self-hiding portals",rus:"Three self-hiding portals"),description:None,uniforms:({((9)):FromDev,((12)):FromDev,((6)):FromDev,((11)):FromDev,((2)):FromDev,((1)):FromDev,((29)):FromDev,((40)):Changed(Some(((45)))),((31)):ChangedAndToUser(Some(((35)))),((7)):FromDev,((30)):FromDev,((0)):FromDev,((8)):FromDev,((10)):FromDev}),matrices:({((42)):FromDev,((13)):FromDev,((19)):FromDev,((37)):FromDev,((53)):FromDev,((47)):FromDev,((38)):FromDev,((36)):FromDev,((15)):FromDev,((20)):FromDev,((57)):FromDev,((30)):FromDev,((58)):FromDev,((56)):FromDev,((33)):FromDev,((22)):FromDev,((14)):FromDev,((28)):FromDev,((54)):FromDev,((29)):FromDev,((17)):FromDev,((25)):FromDev,((51)):FromDev,((16)):FromDev,((34)):FromDev,((0)):FromDev,((27)):FromDev,((55)):FromDev,((23)):FromDev,((35)):FromDev,((26)):FromDev,((59)):FromDev,((24)):FromDev,((39)):FromDev,((41)):FromDev,((21)):FromDev,((18)):FromDev,((48)):FromDev,((49)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((5)):false,((1)):true,((0)):true,((4)):false,((3)):false,((2)):true}),"Three self-hiding portals"),(4):Named((name:(eng:"Self-hiding and two regular",rus:"Self-hiding and two regular"),description:None,uniforms:({((30)):FromDev,((6)):FromDev,((10)):FromDev,((8)):FromDev,((7)):FromDev,((31)):ChangedAndToUser(Some(((36)))),((29)):FromDev,((9)):FromDev,((2)):FromDev,((1)):FromDev,((11)):FromDev,((0)):FromDev,((40)):Changed(Some(((46)))),((12)):FromDev}),matrices:({((16)):FromDev,((23)):FromDev,((41)):FromDev,((14)):FromDev,((26)):FromDev,((37)):FromDev,((15)):FromDev,((53)):FromDev,((38)):FromDev,((34)):FromDev,((54)):FromDev,((18)):FromDev,((29)):FromDev,((24)):FromDev,((55)):FromDev,((21)):FromDev,((13)):FromDev,((30)):FromDev,((27)):FromDev,((25)):FromDev,((0)):FromDev,((51)):FromDev,((57)):FromDev,((33)):FromDev,((48)):FromDev,((22)):FromDev,((36)):FromDev,((17)):FromDev,((39)):FromDev,((42)):FromDev,((47)):FromDev,((19)):FromDev,((20)):FromDev,((35)):FromDev,((49)):FromDev,((28)):FromDev,((59)):FromDev,((56)):FromDev,((58)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((5)):false,((0)):true,((2)):true,((1)):true,((4)):false,((3)):false}),"Self-hiding and two regular"),(5):Named((name:(eng:"Three portals",rus:"Three portals"),description:None,uniforms:({((8)):FromDev,((12)):FromDev,((29)):FromDev,((9)):FromDev,((2)):FromDev,((31)):ChangedAndToUser(Some(((37)))),((30)):FromDev,((11)):FromDev,((7)):FromDev,((6)):FromDev,((1)):FromDev,((0)):FromDev,((40)):Changed(Some(((47)))),((10)):FromDev}),matrices:({((0)):FromDev,((22)):FromDev,((14)):FromDev,((25)):FromDev,((47)):FromDev,((37)):FromDev,((53)):FromDev,((57)):FromDev,((42)):FromDev,((36)):FromDev,((28)):FromDev,((15)):FromDev,((38)):FromDev,((20)):FromDev,((21)):FromDev,((13)):FromDev,((29)):FromDev,((26)):FromDev,((58)):FromDev,((48)):FromDev,((55)):FromDev,((16)):FromDev,((49)):FromDev,((41)):FromDev,((30)):FromDev,((19)):FromDev,((33)):FromDev,((35)):FromDev,((34)):FromDev,((56)):FromDev,((27)):FromDev,((24)):FromDev,((17)):FromDev,((51)):FromDev,((23)):FromDev,((39)):FromDev,((59)):FromDev,((18)):FromDev,((54)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((3)):false,((5)):false,((1)):true,((0)):true,((4)):false,((2)):true}),"Three portals"),(6):Named((name:(eng:"Four portals",rus:"Four portals"),description:None,uniforms:({((40)):Changed(Some(((48)))),((2)):FromDev,((30)):FromDev,((29)):FromDev,((10)):FromDev,((9)):FromDev,((6)):FromDev,((7)):FromDev,((1)):FromDev,((31)):ChangedAndToUser(Some(((38)))),((8)):FromDev,((12)):FromDev,((11)):FromDev,((0)):FromDev}),matrices:({((54)):FromDev,((38)):FromDev,((13)):FromDev,((53)):FromDev,((49)):FromDev,((18)):FromDev,((20)):FromDev,((17)):FromDev,((25)):FromDev,((37)):FromDev,((48)):FromDev,((21)):FromDev,((51)):FromDev,((24)):FromDev,((15)):FromDev,((55)):FromDev,((41)):FromDev,((58)):FromDev,((59)):FromDev,((30)):FromDev,((57)):FromDev,((47)):FromDev,((56)):FromDev,((39)):FromDev,((26)):FromDev,((22)):FromDev,((14)):FromDev,((34)):FromDev,((19)):FromDev,((0)):FromDev,((36)):FromDev,((28)):FromDev,((33)):FromDev,((29)):FromDev,((27)):FromDev,((23)):FromDev,((35)):FromDev,((42)):FromDev,((16)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((2)):true,((1)):true,((3)):true,((5)):false,((0)):true,((4)):false}),"Four portals"),(7):Named((name:(eng:"Six portals (Narnia)",rus:"Six portals (Narnia)"),description:None,uniforms:({((9)):FromDev,((11)):FromDev,((7)):FromDev,((29)):FromDev,((40)):Changed(Some(((49)))),((10)):FromDev,((30)):FromDev,((6)):FromDev,((12)):FromDev,((0)):FromDev,((31)):ChangedAndToUser(Some(((39)))),((8)):FromDev,((1)):FromDev,((2)):FromDev}),matrices:({((26)):FromDev,((56)):FromDev,((25)):FromDev,((23)):FromDev,((16)):FromDev,((55)):FromDev,((59)):FromDev,((0)):FromDev,((20)):FromDev,((14)):FromDev,((39)):FromDev,((57)):FromDev,((30)):FromDev,((28)):FromDev,((22)):FromDev,((47)):FromDev,((24)):FromDev,((48)):FromDev,((41)):FromDev,((38)):FromDev,((58)):FromDev,((51)):FromDev,((34)):FromDev,((29)):FromDev,((53)):FromDev,((33)):FromDev,((54)):FromDev,((15)):FromDev,((36)):FromDev,((18)):FromDev,((35)):FromDev,((19)):FromDev,((42)):FromDev,((49)):FromDev,((37)):FromDev,((27)):FromDev,((13)):FromDev,((21)):FromDev,((17)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((5)):true,((0)):true,((1)):true,((4)):true,((2)):true,((3)):true}),"Six portals (Narnia)"),(8):Named((name:(eng:"Explore",rus:"Исследование"),description:None,uniforms:({((29)):FromDev,((9)):FromDev,((10)):FromDev,((30)):FromDev,((8)):FromDev,((11)):FromDev,((12)):FromDev,((1)):FromDev,((31)):ChangedAndToUser(Some(((41)))),((2)):FromDev,((40)):ProvidedToUser,((7)):FromDev,((0)):FromDev,((6)):FromDev}),matrices:({((27)):FromDev,((30)):FromDev,((41)):FromDev,((58)):FromDev,((37)):FromDev,((28)):FromDev,((13)):FromDev,((49)):FromDev,((20)):FromDev,((54)):FromDev,((51)):FromDev,((35)):FromDev,((22)):FromDev,((23)):FromDev,((55)):FromDev,((17)):FromDev,((33)):FromDev,((25)):FromDev,((36)):FromDev,((47)):FromDev,((0)):FromDev,((29)):FromDev,((42)):FromDev,((34)):FromDev,((39)):FromDev,((26)):FromDev,((21)):FromDev,((56)):FromDev,((59)):FromDev,((18)):FromDev,((48)):FromDev,((15)):FromDev,((19)):FromDev,((24)):FromDev,((53)):FromDev,((57)):FromDev,((14)):FromDev,((38)):FromDev,((16)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((1)):true,((0)):true,((2)):true,((3)):true,((5)):true,((4)):true}),"Explore")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8)]),current_stage:Some(((7))),dev_stage:(uniforms:({((30)):Formula(("0.005")),((6)):Progress(0),((1)):Float((min:Some(0),max:None,value:4)),((12)):Bool(true),((9)):Float((min:Some(0),max:None,value:0.21)),((31)):TrefoilSpecial((((true,3,0),(true,0,0),(false,0,0),(true,8,0),(true,7,0),(true,1,0),(true,5,0),(true,4,0),(true,6,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0),(false,0,0)))),((40)):Bool(false),((8)):Bool(false),((29)):Formula(("0.03")),((11)):Bool(true),((2)):Float((min:Some(0),max:None,value:4)),((10)):Float((min:Some(0),max:None,value:0.35)),((7)):Bool(true),((0)):Float((min:Some(0),max:None,value:4))}),matrices:({((34)):Mul(to:Some(((18))),what:Some(((13)))),((20)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((30)):Simple(offset:(0,15,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((13)):Mul(to:Some(((44))),what:Some(((28)))),((23)):Mul(to:Some(((18))),what:Some(((15)))),((37)):Mul(to:Some(((17))),what:Some(((14)))),((39)):Mul(to:Some(((21))),what:Some(((14)))),((48)):Simple(offset:(0,0,15),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((21)):Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,1.5707963267948966,0),mirror:(false,false,false)),((33)):Mul(to:Some(((17))),what:Some(((13)))),((25)):Mul(to:Some(((17))),what:Some(((36)))),((16)):Simple(offset:(0,0,0),scale:1,rotate:(4.71238898038469,0,0),mirror:(false,false,false)),((27)):Mul(to:Some(((21))),what:Some(((36)))),((15)):Mul(to:Some(((45))),what:Some(((30)))),((26)):Mul(to:Some(((18))),what:Some(((36)))),((57)):Mul(to:Some(((18))),what:Some(((51)))),((41)):Mul(to:Some(((50))),what:Some(((48)))),((17)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((29)):Simple(offset:(-15,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((51)):Mul(to:Some(((52))),what:Some(((49)))),((53)):Mul(to:Some(((17))),what:Some(((41)))),((35)):Mul(to:Some(((21))),what:Some(((13)))),((55)):Mul(to:Some(((21))),what:Some(((41)))),((36)):Mul(to:Some(((46))),what:Some(((42)))),((54)):Mul(to:Some(((18))),what:Some(((41)))),((47)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((24)):Mul(to:Some(((21))),what:Some(((15)))),((14)):Mul(to:Some(((43))),what:Some(((29)))),((56)):Mul(to:Some(((17))),what:Some(((51)))),((58)):Mul(to:Some(((21))),what:Some(((51)))),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((49)):Simple(offset:(0,0,-15),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((28)):If(condition:Yes(Some(((40)))),then:Some(((61))),otherwise:Some(((60)))),((18)):Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,3.141592653589793,1.5707963267948966),mirror:(false,false,false)),((59)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((19)):Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,1.5707963267948966,0),mirror:(false,false,false)),((38)):Mul(to:Some(((18))),what:Some(((14)))),((42)):Simple(offset:(0,-15,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((22)):Mul(to:Some(((17))),what:Some(((15))))})),use_time:false)